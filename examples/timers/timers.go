// Коли виникає потреба у виконанні певної дії або в майбутньому,
// або через певні проміжки часу, Go приходить нам на зустріч з
// двома рішеннями відомими як _хронометри (timers)_ та _[маятники (tickers)](tickers)_. Спробуємо розібратись що ж таке - хронометр.

package main

import (
	"fmt"
	"time"
)

func main() {

	// Хронометр - це подія що відбудеться в майбутньому. Ви вказуєте
	// хронометру скільки часу ви хочете зачекати до неї, а він забезпечує
	// вам канал, по якому він передасть повідомлення, що час сплив.
	// Наприклад, наш хронометр розрахований на дві секунди.
	timer1 := time.NewTimer(2 * time.Second)

	// `<-timer1.C` блокується каналом `C` допоки не буде
	// надіслано повідомлення що час минув.
	<-timer1.C
	fmt.Println("Тaймер 1 запущено")

	// Крім того, не забувайте, хронометр можна зупинити в будь-який момент.
	timer2 := time.NewTimer(time.Second)
	go func() {
		<-timer2.C
		fmt.Println("Тaймер 2 запущено")

	}()
	stop2 := timer2.Stop()
	if stop2 {
		fmt.Println("Тaймер 2 зупинено")
	}

	// Give the `timer2` enough time to fire, if it ever
	// was going to, to show it is in fact stopped.
	time.Sleep(2 * time.Second)
}
