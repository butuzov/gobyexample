// Фукнція _recover_ (або відновлення) використовується лише
// в парі з _defer_, її призначення перехоплювати _panic_
// та відновлювати потік виконання програми.
package main

import "fmt"

// Основна мета цієї функції - викликати `паніку`.
func errorFunc() {
    panic("Паніка без причини")
}

// Паніка буде викликана в цій функції, і наша ціль
// перехопити панічний стан та спокійно завершити роботу.
func normalFunc() {

    // Перехоплення _panic_'и та _recover_ відбувається
    // за допомогою `відкладеного` виклику, який, як ви вже
    // знаєте, відбувається по завершенню виконання функції.
    defer func() {
        if r := recover(); r != nil {
            fmt.Println("Опрацювання паніки:", r)
        }
    }()

    // Момент _panic_'и програми.
    errorFunc()

    // Цей рядок ніколи не буде надруковано.
    fmt.Println("Нормальний вихід")
}

func main() {
    normalFunc()
    fmt.Println("Повернення з функції normalFunc.")
}
