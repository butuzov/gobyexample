<<<<<<< HEAD
# Запуск цієї програми покаже що підчас першої операції
# час сплив, а друга операцію завершилась вчасно.
$ go run timeouts.go
таймаут 1
результат 2

# Використання цього шоблону напряму залежить від
# обміну результатами за допомогою каналів. Викорастання
# канали, поряд з `select` - є основою Go в реалізації
# ассинхроності. Надалі ми розглянемо ще два приклади,
# що використовують данні примітиви: [хронометри](timers)
# та [маятники](tickers).
=======
# Running this program shows the first operation timing
# out and the second succeeding.
$ go run timeouts.go 
timeout 1
result 2
>>>>>>> master
